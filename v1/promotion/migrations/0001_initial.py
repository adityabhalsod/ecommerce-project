# Generated by Django 3.0.8 on 2022-02-11 19:33

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("store", "0005_auto_20220130_0908"),
        ("catalog", "0048_auto_20220211_1828"),
        ("group", "0011_auto_20220211_0418"),
    ]

    operations = [
        migrations.CreateModel(
            name="DiscountVoucher",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("entire_order", "Entire order"),
                            ("specific_store", "Specific Store"),
                            (
                                "specific_product",
                                "Specific products, collections and categories",
                            ),
                        ],
                        default="entire_order",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("code", models.CharField(db_index=True, max_length=255, unique=True)),
                ("is_code_required", models.BooleanField(default=False)),
                ("amount_starting_range", models.FloatField(default=0.0)),
                ("amount_ending_range", models.FloatField(default=0.0)),
                ("is_exist_range_criteria", models.BooleanField(default=False)),
                ("discount_value", models.FloatField(default=0.0)),
                (
                    "value_type",
                    models.CharField(
                        choices=[("fixed", "Fixed"), ("percentage", "%")],
                        default="fixed",
                        max_length=10,
                    ),
                ),
                ("is_apply_super_saving_days_item", models.BooleanField(default=False)),
                ("is_apply_exclusive_offer_item", models.BooleanField(default=False)),
                ("is_apply_free_delivery", models.BooleanField(default=False)),
                (
                    "min_checkout_items_quantity",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("usage_limit", models.PositiveIntegerField(blank=True, null=True)),
                ("used", models.PositiveIntegerField(default=0, editable=False)),
                ("priority", models.BigIntegerField(blank=True, default=0, null=True)),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True,
                        related_name="category_coupon",
                        to="catalog.Category",
                    ),
                ),
                (
                    "collections",
                    models.ManyToManyField(
                        blank=True,
                        related_name="collection_coupon",
                        to="group.Collection",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        blank=True, related_name="product_coupon", to="catalog.Product"
                    ),
                ),
                (
                    "store",
                    models.ManyToManyField(
                        blank=True, related_name="store_coupon", to="store.Store"
                    ),
                ),
                (
                    "variants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="variation_coupon",
                        to="catalog.Variation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
