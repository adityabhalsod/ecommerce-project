# Generated by Django 3.0.8 on 2022-02-16 18:44

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import base.file_dir


class Migration(migrations.Migration):

    dependencies = [
        ("catalog", "0050_auto_20220216_1841"),
        ("warehouse", "0004_auto_20220216_1653"),
    ]

    operations = [
        migrations.RenameField(
            model_name="purchase",
            old_name="total_amount",
            new_name="additional_shipping_charges",
        ),
        migrations.RemoveField(
            model_name="purchase",
            name="remarks",
        ),
        migrations.RemoveField(
            model_name="purchase",
            name="store",
        ),
        migrations.RemoveField(
            model_name="purchase",
            name="supplier",
        ),
        migrations.RemoveField(
            model_name="stocktransfer",
            name="product",
        ),
        migrations.RemoveField(
            model_name="stocktransfer",
            name="quantity",
        ),
        migrations.RemoveField(
            model_name="stocktransfer",
            name="unit",
        ),
        migrations.AddField(
            model_name="purchase",
            name="additional_notes",
            field=models.TextField(blank=True, default="", null=True),
        ),
        migrations.AddField(
            model_name="purchase",
            name="attach_document",
            field=models.FileField(
                blank=True,
                null=True,
                upload_to=base.file_dir.purchase_attach_document,
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="discount_type",
            field=models.CharField(
                choices=[("fixed", "Fixed"), ("percentage", "%")],
                default="fixed",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="item_supplier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="warehouse.Supplier",
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="purchase_total",
            field=models.FloatField(blank=True, default=0.0, null=True),
        ),
        migrations.AddField(
            model_name="purchase",
            name="sub_total",
            field=models.FloatField(blank=True, default=0.0, null=True),
        ),
        migrations.AddField(
            model_name="purchase",
            name="total_items",
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name="purchase",
            name="warehouse",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="warehouse.Warehouse",
            ),
        ),
        migrations.CreateModel(
            name="StockTransferMultiItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_deleted", models.BooleanField(default=False)),
                ("quantity", models.BigIntegerField(default=0)),
                (
                    "product_and_variation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_transfer_product_and_variation",
                        to="catalog.Variation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PurchaseMultiItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_deleted", models.BooleanField(default=False)),
                ("price", models.FloatField(blank=True, default=0.0, null=True)),
                ("quantity", models.BigIntegerField(default=0)),
                (
                    "barcode",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                ("unit_cost", models.FloatField(blank=True, default=0.0, null=True)),
                (
                    "product_and_variation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_product_and_variation",
                        to="catalog.Variation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="purchase",
            name="multiple_item",
            field=models.ManyToManyField(
                blank=True,
                related_name="purchase_multipleitem",
                to="warehouse.PurchaseMultiItem",
            ),
        ),
        migrations.AddField(
            model_name="stocktransfer",
            name="multiple_item",
            field=models.ManyToManyField(
                blank=True,
                related_name="stocktransfer_multipleitem",
                to="warehouse.StockTransferMultiItem",
            ),
        ),
    ]
