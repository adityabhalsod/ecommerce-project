"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import datetime
import os
from distutils.util import strtobool
from pathlib import Path

from config.constance_config import MY_CONSTANCE_CONFIG

from .ckeditor import MY_CKEDITOR_CONFIGS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

DEBUG = strtobool(os.getenv("DEBUG", False))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "')t0207!8lu9!417xy^#_+la)a3h6r5*9(fmfo1wh301^ln_pj('"


ALLOWED_HOSTS = ["*"]


# Application definition

DJANGO_APP = [
    "admin_interface",
    "colorfield",
    "postgres_metrics.apps.PostgresMetrics",
    "adminactions",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "whitenoise.runserver_nostatic",
    "django.contrib.staticfiles",
    "django.contrib.gis",
]

V1 = "v1."

# current project app
PROJECT_APPS = [
    "catalog",
    "cart",
    "delivery",
    "emailtemplate",
    "group",
    "membership",
    "logs",
    "orders",
    "promotion",
    "payment",
    "package",
    "reason",
    "store",
    "warehouse",
    "wallet",
    # "expanse",
    # "otherincome",
    # "wastage"
]

# 3rd party app
THIRD_PARTY_APP = [
    "account",
    "base",
    "corsheaders",
    "constance",
    "constance.backends.database",
    "django_filters",
    "django_celery_beat",
    "drf_yasg",
    "rest_framework",
    "rest_framework_jwt",
    "phonenumber_field",
    "ckeditor",
    "leaflet",
]

APPS = [V1 + item for item in PROJECT_APPS]
INSTALLED_APPS = DJANGO_APP + APPS + THIRD_PARTY_APP

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "base.middleware.ExceptionMiddleware",
    "account.middleware.VisitorTrackingMiddleware",
    "account.middleware.VisitorCleanUpMiddleware",
    "account.middleware.BannedIPMiddleware",
    "base.middleware.LoggingMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        "NAME": os.getenv("POSTGRESQL_DB_NAME"),
        "HOST": os.getenv("POSTGRESQL_HOST"),
        "PORT": os.getenv("POSTGRESQL_PORT"),
        "USER": os.getenv("POSTGRESQL_USERNAME"),
        "PASSWORD": os.getenv("POSTGRESQL_PASSWORD"),
    }
}

if not DEBUG:
    DATABASES["default"]["OPTIONS"] = {
        "sslmode": "require",
        "sslrootcert": os.path.join(BASE_DIR, "ca-certificate.crt"),
    }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

AUTH_USER_MODEL = "account.User"  # custom user model

AUTHENTICATION_BACKENDS = ["account.authentication_backend.AuthBackend"]

JWT_AUTH = {
    "JWT_ENCODE_HANDLER": "rest_framework_jwt.utils.jwt_encode_handler",
    "JWT_DECODE_HANDLER": "rest_framework_jwt.utils.jwt_decode_handler",
    "JWT_PAYLOAD_HANDLER": "account.jwt.jwt_payload_handler",
    "JWT_PAYLOAD_GET_USER_ID_HANDLER": "rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler",
    "JWT_RESPONSE_PAYLOAD_HANDLER": "account.jwt.jwt_response_payload_handler",
    "JWT_PAYLOAD_GET_USERNAME_HANDLER": "account.jwt.jwt_get_username_from_payload_handler",
    "JWT_SECRET_KEY": SECRET_KEY,
    "JWT_ALGORITHM": "HS256",
    "JWT_VERIFY": True,
    "JWT_VERIFY_EXPIRATION": True,
    "JWT_LEEWAY": 0,
    "JWT_AUDIENCE": None,
    "JWT_ISSUER": None,
    "JWT_ALLOW_REFRESH": False,
    "JWT_REFRESH_EXPIRATION_DELTA": datetime.timedelta(days=30),
    "JWT_EXPIRATION_DELTA": datetime.timedelta(days=30),
    "JWT_AUTH_HEADER_PREFIX": "JWT",
    "JWT_AUTH_COOKIE": "jwt_cookie_key",
}


# Django rest framework
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.TemplateHTMLRenderer",
    ],
    "DEFAULT_FILTER_BACKENDS": ("django_filters.rest_framework.DjangoFilterBackend",),
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.AcceptHeaderVersioning",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "EXCEPTION_HANDLER": "base.exceptions.exception_handler",
    "TEST_REQUEST_DEFAULT_FORMAT": "json",
    "PAGE_SIZE": 10,
}

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

PROJECT_NAME = "Quickly"
PROJECT_URL = "wequickly.com"

CONSTANCE_BACKEND = "constance.backends.database.DatabaseBackend"
CONSTANCE_IGNORE_ADMIN_VERSION_CHECK = True
CONSTANCE_CONFIG = MY_CONSTANCE_CONFIG

############################################ Celery settings
CELERY_ACCEPT_CONTENT = ["json", "pickle"]
CELERY_TASK_SERIALIZER = "pickle"
CELERY_RESULT_SERIALIZER = "json"
CELERY_WORKER_PREFETCH_MULTIPLIER = 0
CELERY_CACHE_BACKEND = "django-cache"
CELERY_ENABLE_UTC = True

# Redis BROKER settings
CELERY_BROKER_URL = os.getenv("REDIS_BROKER_URL", "redis://redisapp:6379/0")
CELERY_RESULT_BACKEND = os.getenv("REDIS_BROKER_URL", "redis://redisapp:6379/0")
BROKER_TRANSPORT_OPTIONS = {"visibility_timeout": 3600}  # 1 hour.
############################################ Celery settings

ADMIN_USER_NAME = os.getenv("ADMIN_USER_NAME")
ADMIN_PASSWORD = os.getenv("ADMIN_PASSWORD")


PHONENUMBER_DB_FORMAT = "NATIONAL"
PHONENUMBER_DEFAULT_REGION = "US"

CKEDITOR_CONFIGS = MY_CKEDITOR_CONFIGS
CKEDITOR_UPLOAD_PATH = "uploads/"

X_FRAME_OPTIONS = "SAMEORIGIN"
SILENCED_SYSTEM_CHECKS = ["security.W019"]

LEAFLET_CONFIG = {
    "TILES": "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
    "DEFAULT_CENTER": (28.613062679558915, 77.22955261237605),
    "DEFAULT_ZOOM": 5,
    "MIN_ZOOM": 3,
    "MAX_ZOOM": 18,
    "DEFAULT_PRECISION": 6,
    "SCALE": "both",
    "RESET_VIEW": False,
    "ATTRIBUTION_PREFIX": "Quickly administration",
}

SWAGGER_SETTINGS = {
    "USE_SESSION_AUTH": False,
    "SECURITY_DEFINITIONS": {
        "api_key": {"type": "apiKey", "in": "header", "name": "Authorization"}
    },
    "DEFAULT_MODEL_DEPTH": -1,
    "SUPPORTED_SUBMIT_METHODS": [
        "get",
        "post",
        "delete",
        "patch",
    ],
    "PERSIST_AUTH": True,
    "SHOW_REQUEST_HEADERS": True,
    "JSON_EDITOR": True,
    "DEFAULT_MODEL_RENDERING": "model",
    "DISPLAY_OPERATION_ID": False,
}
